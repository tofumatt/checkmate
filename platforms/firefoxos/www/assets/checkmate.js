eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"checkmate/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"checkmate/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n        modulePrefix: config.modulePrefix,\n        podModulePrefix: config.podModulePrefix,\n        Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=checkmate/app.js");

;eval("define(\"checkmate/models/user\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    var attr = DS.attr;\n\n    var User = DS.Model.extend({\n        firstName: attr(\'string\'),\n        lastName: attr(\'string\'),\n        // photo: [\'object\']\n        // relationship:\n        //     allowNull: true\n        //     default: CONSTANTS.RELATIONSHIP.NONE\n        //     type: \"string\"\n        // type:\n        //     allowNull: true\n        //     default: CONSTANTS.TYPE.USER\n        //     type: \"string\"\n        // friends: null\n        homeCity: attr(\'string\'),\n        gender: attr(\'string\'),\n        // contact: null\n        bio: attr(\'string\'),\n        // tips: null\n        // checkins: [\'object\']\n        // currentLocation: [\'object\']\n\n        access_token: attr(\'string\'),\n\n        lastUpdated: attr(\'date\')\n    });\n\n    __exports__[\"default\"] = User;\n  });//# sourceURL=checkmate/models/user.js");

;eval("define(\"checkmate/router\", \n  [\"ember\",\"checkmate/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n        location: config.locationType\n    });\n\n    Router.map(function() {\n        this.resource(\'user\', { path: \'users/:user_id\' }, function() { });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=checkmate/router.js");

;eval("define(\"checkmate/routes/user\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    });\n  });//# sourceURL=checkmate/routes/user.js");

;eval("define(\"checkmate/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<section>\\n  <div class=\\\"bar bar-header bar-positive\\\">\\n    <!--\\n    <button class=\\\"button button-icon icon ion-chevron-left\\\"></button>\\n    -->\\n    <h1 class=\\\"title\\\">Checkmate</h1>\\n    <button class=\\\"button button-icon icon ion-map\\\" title=\\\"Explore\\\"></button>\\n    \\n  </div>\\n  <div class=\\\"bar bar-subheader\\\">\\n    <h2 class=\\\"title\\\">At Mozilla NYC (51 minutes ago)</h2>\\n  </div>\\n\\n  <ion-content overflow-scroll=\\\"false\\\">\\n    \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n    <div class=\\\"button-bar\\\">\\n      <a class=\\\"button button-energized button-small\\\">Nearby</a>\\n      <a class=\\\"button button-small\\\">Worldwide</a>\\n    </div>\\n\\n    <div class=\\\"list\\\">\\n      <a class=\\\"item item-avatar\\\" href=\\\"#\\\">\\n        <img src=\\\"https://irs0.4sqi.net/img/user/100x100/W5FJ24RUT3FNMQ4W.jpg\\\">\\n        <h2>Matthew Riley</h2>\\n        <h3>Caf√© Myriade</h3>\\n        <h4>a day ago</h4>\\n      </a>\\n      <a class=\\\"item item-avatar\\\" href=\\\"#\\\">\\n        <img src=\\\"https://irs0.4sqi.net/img/user/100x100/PUY224FRODCHY0DD.jpg\\\">\\n        <h2>Matthew</h2>\\n        <h3>Beretta</h3>\\n        <h4>16 days ago</h4>\\n        <p>Been too long since I hung out with Erin!</p>\\n      </a>\\n    </div>\\n  </ion-content>\\n\\n  <div class=\\\"bar bar-footer\\\">\\n    <button class=\\\"button button-large button-outline button-icon\\n                   ion-location button-energized\\\" id=\\\"check-in\\\"></button>\\n  </div>\\n</section>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=checkmate/templates/application.js");

;eval("define(\"checkmate/templates/user\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=checkmate/templates/user.js");

;eval("define(\"checkmate/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=checkmate/tests/app.jshint.js");

;eval("define(\"checkmate/tests/checkmate/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - checkmate/tests/helpers\');\n    test(\'checkmate/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'checkmate/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=checkmate/tests/checkmate/tests/helpers/resolver.jshint.js");

;eval("define(\"checkmate/tests/checkmate/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - checkmate/tests/helpers\');\n    test(\'checkmate/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'checkmate/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=checkmate/tests/checkmate/tests/helpers/start-app.jshint.js");

;eval("define(\"checkmate/tests/checkmate/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - checkmate/tests\');\n    test(\'checkmate/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'checkmate/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=checkmate/tests/checkmate/tests/test-helper.jshint.js");

;eval("define(\"checkmate/tests/checkmate/tests/unit/models/user-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - checkmate/tests/unit/models\');\n    test(\'checkmate/tests/unit/models/user-test.js should pass jshint\', function() { \n      ok(true, \'checkmate/tests/unit/models/user-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=checkmate/tests/checkmate/tests/unit/models/user-test.jshint.js");

;eval("define(\"checkmate/tests/checkmate/tests/unit/routes/user-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - checkmate/tests/unit/routes\');\n    test(\'checkmate/tests/unit/routes/user-test.js should pass jshint\', function() { \n      ok(true, \'checkmate/tests/unit/routes/user-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=checkmate/tests/checkmate/tests/unit/routes/user-test.jshint.js");

;eval("define(\"checkmate/tests/checkmate/tests/unit/utils/foursquare-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - checkmate/tests/unit/utils\');\n    test(\'checkmate/tests/unit/utils/foursquare-test.js should pass jshint\', function() { \n      ok(true, \'checkmate/tests/unit/utils/foursquare-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=checkmate/tests/checkmate/tests/unit/utils/foursquare-test.jshint.js");

;eval("define(\"checkmate/tests/helpers/resolver\", \n  [\"ember/resolver\",\"checkmate/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=checkmate/tests/helpers/resolver.js");

;eval("define(\"checkmate/tests/helpers/start-app\", \n  [\"ember\",\"checkmate/app\",\"checkmate/router\",\"checkmate/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=checkmate/tests/helpers/start-app.js");

;eval("define(\"checkmate/tests/models/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/user.js should pass jshint\', function() { \n      ok(true, \'models/user.js should pass jshint.\'); \n    });\n  });//# sourceURL=checkmate/tests/models/user.jshint.js");

;eval("define(\"checkmate/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=checkmate/tests/router.jshint.js");

;eval("define(\"checkmate/tests/routes/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/user.js should pass jshint\', function() { \n      ok(true, \'routes/user.js should pass jshint.\'); \n    });\n  });//# sourceURL=checkmate/tests/routes/user.jshint.js");

;eval("define(\"checkmate/tests/test-helper\", \n  [\"checkmate/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=checkmate/tests/test-helper.js");

;eval("define(\"checkmate/tests/unit/models/user-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'user\', \'User\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=checkmate/tests/unit/models/user-test.js");

;eval("define(\"checkmate/tests/unit/routes/user-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:user\', \'UserRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=checkmate/tests/unit/routes/user-test.js");

;eval("define(\"checkmate/tests/unit/utils/foursquare-test\", \n  [\"checkmate/utils/foursquare\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var foursquare = __dependency1__[\"default\"];\n\n    module(\'foursquare\');\n\n    // Replace this with your real tests.\n    test(\'it works\', function() {\n      var result = foursquare();\n      ok(result);\n    });\n  });//# sourceURL=checkmate/tests/unit/utils/foursquare-test.js");

;eval("define(\"checkmate/utils/foursquare\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var foursquare;\n\n    foursquare = function() {\n      var defaultErrorHander, defaultSuccessHandler, request, upload;\n      request = function(url, args) {\n        var data;\n        if (args == null) {\n          args = {};\n        }\n        if (GLOBALS && GLOABLS.TOKEN) {\n          data = {\n            oauth_token: GLOBALS.TOKEN,\n            v: GLOBALS.API_DATE\n          };\n        } else {\n          data = {\n            v: GLOBALS.API_DATE\n          };\n        }\n        if (args.data) {\n          $.extend(data, args.data);\n        }\n        console.debug(\"\" + (args.requestMethod || \'GET\') + \" /\" + url, data);\n        return $.ajax({\n          type: args.requestMethod || \"GET\",\n          data: data,\n          dataType: \'json\',\n          url: \"\" + window.GLOBALS.API_URL + url,\n          success: defaultSuccessHandler,\n          error: defaultErrorHander\n        });\n      };\n      upload = function(url, postData) {\n        if (postData == null) {\n          postData = {};\n        }\n        return new Promise(function(resolve, reject) {\n          var data, formData, k, v;\n          data = {\n            oauth_token: GLOBALS.TOKEN,\n            v: GLOBALS.API_DATE\n          };\n          if (postData) {\n            $.extend(data, postData);\n          }\n          request = new XMLHttpRequest();\n          formData = new FormData();\n          for (k in data) {\n            v = data[k];\n            formData.append(k, v);\n          }\n          console.debug(\"UPLOAD (POST) /\" + url, data);\n          request.open(\'POST\', \"\" + window.GLOBALS.API_URL + \"photos/add\", true);\n          request.responseType = \'json\';\n          request.addEventListener(\'error\', d.reject);\n          request.addEventListener(\'readystatechange\', function() {\n            if (request.readyState === 4) {\n              return resolve(request.response);\n            }\n          });\n          return request.send(formData);\n        });\n      };\n      defaultErrorHander = function(xhr, errorType, error) {\n        return console.error(\"Foursquare API Error | \" + xhr.status, xhr, errorType, error);\n      };\n      defaultSuccessHandler = function(response, status, xhr) {\n        return console.info(\"Foursquare API Response | \" + xhr.status, response, xhr);\n      };\n      return {\n        request: request,\n        upload: upload\n      };\n    };\n\n    __exports__[\"default\"] = foursquare;\n  });//# sourceURL=checkmate/utils/foursquare.js");

/* jshint ignore:start */

define('checkmate/config/environment', ['ember'], function(Ember) {
  var metaName = 'checkmate/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
});

if (runningTests) {
  require('checkmate/tests/test-helper');
} else {
  require('checkmate/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
